npm install nodemailer googleapis

EMAIL=alejandro2003zabaleta@gmail.como


refresh token 1//04D7_U3YER6LxCgYIARAAGAQSNwF-L9IrvtKnp_Ah4d-9s20QVZw-tSMXEjg6Mkp4Cdx_fI0onYrvXZzFFOy2UOSkah45aA4YoeM


CLIENT_SECRET= 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

CLIENT_ID=1018916884077-bpvjapcg7t53njfudffck051hjple6uv.apps.googleusercontent.com

REDIRECT_URI = https://developers.google.com/oauthplayground/


CREAR/UTILS/handleEmail.JSON
//requier("dotev").config();
const nodemailer = require("Nodemailer");
const {google} = require("googleapis");
const OAuth2 = google.auth.OAuth2;




const createTransporter = async () => {
const oauth2Client = new OAuth2(
process.env.CLIENT_ID,
process.env.CLIENT_SECRET,
process.env.REDIRECT_URI
);
oauth2Client.setCredentials({
refresh_token: process.env.REFRESH_TOKEN
});
const accessToken = await new Promise((resolve, reject) => {
oauth2Client.getAccessToken((err, token) => {
if (err) {
reject("Failed to create access token.");
}
resolve(token);
});
});
const transporter = nodemailer.createTransport({
service: "gmail",
auth: {
type: "OAuth2",
user: process.env.EMAIL,
accessToken,
clientId: process.env.CLIENT_ID,
clientSecret: process.env.CLIENT_SECRET,
refreshToken: process.env.REFRESH_TOKEN
}
});
return transporter;
};



const sendEmail = async (emailOptions) => {
try {
let emailTransporter = await createTransporter();
await emailTransporter.sendMail(emailOptions);
} catch (e) {
console.log(e)
}
};
module.exports = { sendEmail }